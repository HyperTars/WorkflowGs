#!groovy
pipeline {
    agent none
	stages {
		stage('Maven Install') {
			agent {
				docker {
					image 'maven:3.5.0'
					args '-v $HOME/.m2:/root/.m2'
				}
			}
			steps {
				sh ' cd WorkFlow ; mvn clean install'
			}
		}
		stage('Deployment ') {
			agent {
				docker {
					image 'pad92/ansible-alpine'
					args '-v /srv/gitlab/config:/etc/gitlab'
				}
			}
			steps {
				sh 'cd WorkFlowProcessAndPublishForRecord/deployment;  	ansible-playbook -i  ../../WorkFlow/ansible/inventory.yml ../../WorkFlow/ansible/deploy.yml -v'
				sh 'cd WorkFlowComputeHashKey/deployment;  				ansible-playbook -i  ../../WorkFlow/ansible/inventory.yml ../../WorkFlow/ansible/deploy.yml -v'
				sh 'cd WorkFlowDuplicatecheck/deployment;  				ansible-playbook -i  ../../WorkFlow/ansible/inventory.yml ../../WorkFlow/ansible/deploy.yml -v'
				sh 'cd WorkFlowCopyFile/deployment;  					ansible-playbook -i  ../../WorkFlow/ansible/inventory.yml ../../WorkFlow/ansible/deploy.yml -v'
				sh 'cd WorkFlowExtractImageInfo/deployment;  			ansible-playbook -i  ../../WorkFlow/ansible/inventory.yml ../../WorkFlow/ansible/deploy.yml -v'
				sh 'cd WorkflowScan/deployment;  						ansible-playbook -i  ../../WorkFlow/ansible/inventory.yml ../../WorkFlow/ansible/deploy.yml -v'
				sh 'cd WorkflowHbase/deployment;  						ansible-playbook -i  ../../WorkFlow/ansible/inventory.yml ../../WorkFlow/ansible/deploy.yml -v'

			}
		}
	}
}