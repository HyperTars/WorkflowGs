topic.inputImageNameTopic=topic-image-name
topic.topicExif=topic-exif
topic.recordThumbTopic=topic-to-record-thumb
topic.processedThumbTopic=topic-processed-thumb
topic.pathNameTopic=topic-path-image

topic.duplicateImageFoundTopic=topic-duplicate-key-image-found
topic.topicDupFilteredFile=topic-dup-filtered-file
topic.scan-output=topic-file-found-in-scan
topic.topicFileHashKey=topic-file-hash-key

topic.topicImageDate=topic-topic-image-date

topic.topicDupDilteredFile=topic-dup-filtered-file
topic.topicCopyOtherFile=topic-copy-other-file
topic.scan-output-child-parent=topic-scan-output-file-child-with-parent
topic.topicTransformedThumb=topic-transformed-thumb
topic.topicImageDataToPersist=topic-image-data-to-persist
topic.topicExifImageDataToPersist=topic-exif-image-data-to-persist
topic.topicThumb=topic-thumb
topic.topicCountOfImagesPerDate=topic.topic-count-of-images-per-date
topic.scannedFiles=topic-scanned-files
topic.scannedFilesChildParent=topic-scanned-files-child

security.protocol=SASL_PLAINTEXT
sasl.kerberos.service.name="kafka"

duplicate.storeName=image-key-store
copy.group.id=copy-group-transactional

zookeeper.hosts={{zookeeper_hosts}}
hbase.master={{hbase_master}}
zookeeper.port={{zookeeper_port}}
bootstrap.servers={{ kafka_bootstrap_servers }}
kafkaStreamDir.dir={{ kafka_stream_dir }}
application.id={{ application_id }}_{{ host_id }}
group.id=group-for-{{ application_id }}
application.kafkastreams.id={{ application_id }}
scan.folder={{ application_scannedFolder }}
copy.repository={{ copy_repository }}
logging.config=config/log4j.xml
copy.maxNumberOfFilesInAFolder={{ max_number_of_files_in_a_folder }}

transaction.id={{ transaction_id }}_{{ host_id }}
transaction.timeout=180000

application.gs.principal={{ application_gs_principal }}
application.gs.keytab={{ application_gs_keytab }}
hbase.table.prefix=prod


#Configuration
consumer.string.string={{ consumer_string_string }}
producer.string.string={{ producer_string_string }}
ignite.is.used={{ignite_is_used}}
deduplication.cleanup=true
